include(libpath.m4)

LIBPATH_HEADER()

.SH NAME
libpath_join_path - join strings into a single string

.SH SYNOPSIS
LIBPATH_INCLUSIONS()

.BI "size_t libpath_join_path(char *" "buffer" ", int" " length" ", ...);"

.SH DESCRIPTION
The
.B libpath_join_path
function will join strings into a single string while respecting the length of
a buffer. The final path in the variadic arguments should be NULL to signal the
end of the path list. It should be noted that this does
.B not
add path separators. They must be added manually.

LIBPATH_ERROR_LIST_START()
LIBPATH_ERROR_COND(`buffer is NULL')
LIBPATH_ERROR_COND(`length is less than zero')
LIBPATH_ERROR_LIST_END()

LIBPATH_PARAMETER(`buffer', `the character array to write the path to')
LIBPATH_PARAMETER(`length', `the maximum length of the buffer - 1')

.SH RETURN VALUE
This function will return the number of bytes written to the buffer. However,
if the path must be truncated to fit the length of the buffer, then the maximum
length of the buffer + 1 is returned to signal the truncation.

.SH EXAMPLES
LIBPATH_EXAMPLE_COMMENT(`libpath_join_path')
LIBPATH_INCLUSIONS()

int main(void) {
    char buffer[LIBPATH_MAX_PATH + 1] = {0};

    /* Get path to the user's home directory */
    libpath_join_path(buffer, LIBPATH_MAX_PATH, "/home", "/", getenv("USER"));

    return EXIT_SUCCESS;
.br
}

.SH SEE ALSO
LIBPATH_SEE_ALSO()
